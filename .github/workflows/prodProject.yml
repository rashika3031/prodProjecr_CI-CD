name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
    build-test-publishArtifacts:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
  
        - name: Build with Maven
          run: mvn clean install
        
        - name: Unit test case
          run: mvn test
      
        - name: Generate and Upload Artifacts
          uses: actions/upload-artifact@v2
          with:
            name: prodProjectArtifact
            path: target/*.war 

        - name: Cache Maven dependencies
          uses: actions/cache@v2
          with:
            path: |
              ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/*.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-

        - name: Configure Docker credentials
          run: |
            mkdir -p ~/.docker
            echo "{\"credsStore\": \"secretservice\"}" > ~/.docker/config.json
          
        - name: Login to Docker Hub
          run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          env:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          
        - name: Build and Push Docker Image
          run: |
            docker build -t "${DOCKER_USERNAME}/prodproject:latest" .
            docker push "${DOCKER_USERNAME}/prodproject:latest"
          
        - name: Logout from Docker Hub
          run: docker logout
          
        
        # - name: Build Docker image
        #   run: docker build -t "${DOCKER_USERNAME}/prodproject:latest" .
        #   env:
        #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          
        # - name: Push Docker image to registry
        #   run: |
        #     echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
        #     docker push "${DOCKER_USERNAME}/prodproject:latest"
        #   env:
        #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            
            
