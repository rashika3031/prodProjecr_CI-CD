name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
    build-test-publishArtifacts:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Cache Maven dependencies
          uses: actions/cache@v2
          with:
            path: |
              ~/.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/*.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-
  
        - name: Build with Maven
          run: mvn clean install
        
        - name: Unit test case
          run: mvn test

        - name: Upload artifacts to Artifactory
          uses: actions/upload-artifact@v3
          with:
            name: prodProject
            path: target/*.war
  
        - name: Configure Artifactory authentication
          run: |
            echo ARTIFACTORY_URL="${{ secrets.ARTIFACTORY_URL }}"
            echo ARTIFACTORY_USERNAME="${{ secrets.ARTIFACTORY_USERNAME }}"
            echo ARTIFACTORY_PASSWORD="${{ secrets.ARTIFACTORY_PASSWORD }}"

        # - name: Upload artifacts to Artifactory
        #   uses: nnn
        #   with:
        #       artifactory-url: http://localhost:8081/artifactory
        #       artifactory-username: admin
        #       artifactory-password: password
        #       target-repository: my-repo
        #       artifacts: target/*.jar

        - name: Upload artifacts to Artifactory
          run: |
            echo ARTIFACTORY_URL="${{ secrets.ARTIFACTORY_URL }}"
            echo ARTIFACTORY_USERNAME="${{ secrets.ARTIFACTORY_USERNAME }}"
            echo ARTIFACTORY_PASSWORD="${{ secrets.ARTIFACTORY_PASSWORD }}""
            jfrog rt upload target/*.war generic

      

  
      
        # - name: Generate and Upload Artifacts
        #   uses: actions/upload-artifact@v2
        #   with:
        #     name: prodProjectArtifact
        #     path: target/*.war 
                 
        # - name: Docker Login 
        #   uses: docker/login-action@v3
        #   with:
        #     username: ${{ secrets.DOCKER_USERNAME }}
        #     password: ${{ secrets.DOCKER_PASSWORD }}

        # - name: Build and Push Docker image
        #   run: |
        #     docker build -t "${DOCKER_USERNAME}/prodproject:latest" .
        #     docker push "${DOCKER_USERNAME}/prodproject:latest"   
        #   env:
        #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            
        
        
            
            
